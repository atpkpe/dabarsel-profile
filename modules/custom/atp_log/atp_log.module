<?php
/**
 * @file
 * ATP_log module file.
 */

/**
 * Implements hook_entity_insert().
 */
function apt_log_entity_insert($entity, $type) {
  _atp_log_action('created', $entity, $type);
}

/**
 * Implements hook_entity_update().
 */
function atp_log_entity_update($entity, $type) {
  _atp_log_action('updated', $entity, $type);
}

/**
 * Implements hook_entity_delete().
 */
function atp_log_entity_delete($entity, $type) {
  _atp_log_action('deleted', $entity, $type);
}

/**
 * Log an action in accordance with ATP requirements.
 *
 * @param string $action
 * @param stdClass $entity
 * @param string $type
 */
function _atp_log_action($action, $entity, $type) {

  $entity_ids = entity_extract_ids($type, $entity);
  $entity_id = $entity_ids[0];

  $remote_user = _atp_log_get_user();

  watchdog('atp_log action', ':entity_type with id :id was :action by :username (group: :group) (remote ip: :ip)',
    array(
      ':entity_type' => ucfirst($type),
      ':id' => $entity_id,
      ':action' => $action,
      ':username' => $remote_user->name,
      ':group' => $remote_user->group,
      ':ip' => $remote_user->ip,
    ),
    WATCHDOG_INFO
  );
}

/**
 * Identify and get the current user for logging purposes.
 *
 * @return stdClass
 */
function _atp_log_get_user() {
  $remote_user = drupal_static(__FUNCTION__, array());

  if (empty($remote_user)) {
    global $user;
    if (function_exists('getallheaders')) {
      $headers = getallheaders();
      if (!empty($headers['HTTP_IV_USER']) && !empty($headers['HTTP_IV_GROUPS']) && !empty($headers['HTTP_IV_REMOTE_ADDRESS'])) {
        $remote_user['name'] = $headers['HTTP_IV_USER'];
        $remote_user['group'] = $headers['HTTP_IV_GROUPS'];
        $remote_user['ip'] = $headers['HTTP_IV_REMOTE_ADDRESS'];
        $remote_user['is_drupal'] = FALSE;
      }
      else {
        $remote_user['name'] = empty($user->name) ? 'Anonymous' : $user->name;
        $remote_user['group'] = implode(', ', $user->roles);
        $remote_user['ip'] = empty($_SERVER['REMOTE_ADDR']) ? 'unknown' : $_SERVER['REMOTE_ADDR'];
        $remote_user['is_drupal'] = TRUE;
      }
    }
    else {
      $remote_user['name'] = empty($user->name) ? 'Anonymous' : $user->name;
      $remote_user['group'] = implode(', ', $user->roles);
      $remote_user['ip'] = empty($_SERVER['REMOTE_ADDR']) ? 'unknown' : $_SERVER['REMOTE_ADDR'];
      $remote_user['is_drupal'] = TRUE;
    }
  }

  return (object) $remote_user;
}
