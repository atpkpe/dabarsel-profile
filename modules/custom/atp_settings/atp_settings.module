<?php
/**
 * @file
 * Code for the ATP settings feature.
 */

include_once 'atp_settings.features.inc';

/**
 * Implements hook_system_info_alter().
 *
 * Hide features that are just examples from random modules.
 */
function atp_settings_system_info_alter(&$info, $file, $type) {
  $ignored_modules = array(
    'date_migrate_example'
  );

  if ($type == 'module' && in_array($file->name, $ignored_modules)) {
    $info['hidden'] = TRUE;
  }
}

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function atp_settings_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor == 'ckeditor') {
    $settings['height'] = 180;
    $settings['allowedContent'] = TRUE;
  }
}

/**
 * Implements hook_element_info_alter().
 */
function atp_settings_element_info_alter(&$type) {
  $type['text_format']['#process'][] = 'atp_settings_element_process_text_format';
  $type['textfield']['#process'][] = 'atp_settings_element_process_textfield';
}

/**
 * Process function for textfield element.
 *
 * @see mysite_element_info_alter().
 * @see https://drupal.org/node/2104275
 */
function atp_settings_element_process_textfield($element) {

  if (!empty($element['#field_name']) && $element['#field_name'] == 'field_twt_title') {
    $element['#title'] = FALSE;
  }

  return $element;
}


/**
 * Process function for text_format element.
 *
 * @see mysite_element_info_alter().
 * @see https://drupal.org/node/2104275
 */
function atp_settings_element_process_text_format($element) {

  $element['format']['#collapsible'] = TRUE;
  $element['format']['#collapsed'] = TRUE;
  $element['format']['#title'] = t('Text formatting');

  if (!empty($element['#field_name'])) {

    if ($element['#field_name'] == 'field_twt_text' ) {
      $element['value']['#title'] = FALSE;
    }

    if (in_array($element['#field_name'], array('field_twt_text','field_slide_body'))) {
      if (empty($element['#default_value'])) {
        $element['format']['format']['#default_value'] = 'simple_html';
      }
    }

    if (in_array($element['#field_name'], array('field_page_summary','field_section_summary'))) {
      if (empty($element['#default_value'])) {
        $element['format']['format']['#default_value'] = 'plain_text';
      }
    }

  }

  return $element;
}

/**
* Implements hook_variable_info().
*/
function atp_settings_variable_info($options) {
  $variables['gss_api_key'] = array(
    'title' => t('GoogleSite Search API key'),
  );
  return $variables;
}

/**
 * Implements hook_variable_info_alter().
 * Only variables which have the "localize" property set to TRUE, can be
 * used as language specific variables.
 */
function atp_settings_variable_info_alter(&$variables, $options) {
  $variables['gss_api_key']['localize'] = TRUE;
}

