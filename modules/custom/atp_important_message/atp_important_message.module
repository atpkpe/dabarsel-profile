<?php

// ./contrib/jquery_update/replace/ui/external/jquery.cookie.js

/**
 * Implementation of hook_ctools_plugin_directory().
 */
function atp_important_message_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_js().
 */
function atp_important_message_js() {
  // URL is /js/atp_important_message/results/%id.
  return array(
    'results' => array(
      'callback' => 'atp_important_message_results',
      'includes' => array('unicode'),
      'dependencies' => array('filter'),
      'bootstrap' => DRUPAL_BOOTSTRAP_DATABASE,
      'page arguments' => array(1),
      'skip_hook_init' => TRUE,
    ),
  );
}

/**
 * Dismissible pane ajax result handler
 */
function atp_important_message_results($id) {

  $current = db_select('node', 'n')
             ->fields('n', array('nid','vid'))
             ->condition('status', 1)
             ->condition('type', 'important_message')
             ->orderBy('vid', 'DESC')
             ->range(0,1)
             ->execute()
             ->fetchObject();

  if ($current->vid > $id) {

    if ($cache = cache_get('atp_important_message_results')) {
      $result = $cache->data;
    }

    if (!$cache || $cache->data->message_id != $current->vid) {
      // Now raise the bootstrap level so text filters are available.
      drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);
      $body = atp_important_message_get_field($current, 'field_important_message_body_da');
      $result = array(
        'message_id' => $current->vid,
        'title' => atp_important_message_get_field($current, 'title_field'),
        'body' => check_markup($body, 'simple_html'),
        'success' => TRUE,
        'show_message' => TRUE,
      );
      cache_set('atp_important_message_results', $result, 'cache');
    }

    drupal_json_output($result);
  } else {
    drupal_json_output(array(
      'success' => TRUE,
      'show_message' => FALSE,
    ));
  }

  drupal_exit();
}

function atp_important_message_get_field($node, $field_name) {
  return db_select('field_data_' . $field_name, 'f')
         ->fields('f', array($field_name . '_value'))
         ->condition('entity_id', $node->nid)
         ->condition('revision_id', $node->vid)
         ->execute()
         ->fetchField();
}

