<?php
/**
 * @file
 * Code for the ATP important message feature.
 */

include_once 'atp_important_message.features.inc';

/**
 * Implementation of hook_ctools_plugin_directory().
 */
function atp_important_message_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_js().
 */
function atp_important_message_js() {
  // URL is /js/atp_important_message/results/%id.
  return array(
    'results' => array(
      'callback' => 'atp_important_message_results',
      'includes' => array('unicode'),
      'dependencies' => array(),
      'bootstrap' => DRUPAL_BOOTSTRAP_DATABASE,
      'page arguments' => array(1),
      'skip_hook_init' => TRUE,
    ),
  );
}

/**
 * Dismissible pane ajax result handler
 */
function atp_important_message_results($id) {

  $current = db_select('node', 'n')
             ->fields('n', array('nid','vid'))
             ->condition('status', 1)
             ->condition('type', 'important_message')
             ->orderBy('vid', 'DESC')
             ->range(0,1)
             ->execute()
             ->fetchObject();

  if ($current->vid > $id) {

    $lang = ( 0 === strpos($_REQUEST['q'], 'en/') ? '_en' : '' );

    // t don't work at this bootstrap level.
    $button_text = ($lang == '_en' ? 'Dismiss message' : 'Luk meddelelse');
    $title = atp_important_message_get_field($current, 'important_message_title' . $lang );
    $body = atp_important_message_get_field($current, 'important_message_body' . $lang);
    // Link not used anymore.
    // $link = atp_important_message_get_link($current, 'important_message_link' . $lang);

    $html = '<div class="important-message-content"><h2>' . $title . '</h2><p>' . nl2br($body) .
            '</p><a href="javascript:void(0);" class="close-button">' . $button_text . '</a></div>';

    $result = array(
      'message_id' => $current->vid,
      'html' => $html,
      'success' => TRUE,
      'show_message' => TRUE,
    );

    drupal_json_output($result);
  } else {
    drupal_json_output(array(
      'success' => TRUE,
      'show_message' => FALSE,
    ));
  }

  drupal_exit();
}

function atp_important_message_get_alias($path) {
  return db_select('url_alias', 'u')
         ->fields('u', array('alias'))
         ->condition('source', $path)
         ->orderBy('pid', 'DESC')
         ->execute()
         ->fetchField();
}

function atp_important_message_get_field($node, $field_name) {
  return db_select('field_data_field_' . $field_name, 'f')
         ->fields('f', array('field_' . $field_name . '_value'))
         ->condition('entity_id', $node->nid)
         ->condition('revision_id', $node->vid)
         ->execute()
         ->fetchField();
}

function atp_important_message_get_link($node, $field_name) {

  $query = db_select('field_data_field_' . $field_name, 'f')
           ->condition('entity_id', $node->nid)
           ->condition('revision_id', $node->vid);

  $query->addField('f', 'field_' . $field_name . '_url', 'url');
  $query->addField('f', 'field_' . $field_name . '_title', 'title');

  $result = $query->execute()->fetchObject();

  if ($result) {
    $url = ltrim($result->url, '/');
    if (0 === strpos($url, 'node')) {
      if ( $alias = atp_important_message_get_alias($url)) {
        $url = $alias;
      }
    }
    return '<a href="' . $url . '">' . $result->title . '</a>';
  }

}
