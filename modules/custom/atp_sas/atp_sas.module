<?php
/**
 * @file
 * Code for the ATP SAS.
 */


define('ATP_SAS_DIAG_BROWSER_ROOT_PATH', 'profiles/atp/modules/custom/atp_sas/test');

/**
 * implements hook_menu
 */
function atp_sas_menu() {
  $items = array();
//  $items['atp-sas/chart-test'] = array(
//    'page callback' => 'atp_sas_chart_test',
////    'page arguments' => array(2),
//    'access callback' => TRUE,
//    'type' => MENU_CALLBACK,
//  );
  $items['atp-sas/insert/nojs'] = array(
    'page callback' => 'atp_sas_get_file_browser',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['atp-sas/insert/ajax'] = array(
      'delivery callback' => 'ajax_deliver'
    ) + $items['atp-sas/insert/nojs'];

  $items['atp-sas/ajax/browser/json'] = array(
    'page callback' => 'atp_sas_ajax_get_file_browser',
    'access callback' => TRUE,
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_filter_info()
 */
function atp_sas_filter_info() {

  $filters['atp_sas_diag_embed'] = array(
    'title' => t('Insert diagram'),
    'description' => t('By including the syntax [[sasDiag:(settings)], this filter will embed a diagram.'),
    'process callback' => '_atp_sas_diag_embed_process',
    'tips callback'  => '_atp_sas_diag_embed_tips',
    'cache' => FALSE,
  );

  return $filters;

}

function atp_sas_get_file_browser($ajax) {
  $is_ajax = $ajax === 'ajax';
  $output = array();
  $output['sas_dir_browser_wrapper'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'id' => 'sas-dir-browser-wrapper',
    ),
  );
  $output['sas_dir_browser_wrapper'] += atp_sas_ajax_get_file_browser();
  if ($is_ajax) {
    $render = render($output);
    die($render);
  }
  else {
    return $output;
  }
}

/**
 * Implements of hook_wysiwyg_include_directory().
 */
function atp_sas_wysiwyg_include_directory($type) {
  return $type;
}

function atp_sas_get_dir_sctructure($dir) {
  $structure = array();
  $files = new RecursiveIteratorIterator(
    new RecursiveDirectoryIterator($dir, RecursiveDirectoryIterator::SKIP_DOTS),
    RecursiveIteratorIterator::SELF_FIRST
  );
  $files->setMaxDepth(0);

  if ($files->callHasChildren()) {
    foreach ($files as $child) {
      if ($child->isDir()) {
        $structure[] = array(
          'type' => 'dir',
          'node' => $child,
        );
      }
    }
  }
  else {
    foreach ($files as $child) {
      if ($child->isFile()) {
        $structure[] = array(
          'type' => 'file',
          'node' => $child,
        );
      }
    }
  }
  return $structure;
}

function atp_sas_ajax_get_file_browser($json = FALSE) {
  $root_path = variable_get('atp_sas_diag_browser_root_path', ATP_SAS_DIAG_BROWSER_ROOT_PATH);
  $path = !empty($_GET['path']) ? $_GET['path'] : $root_path;
  $structure = atp_sas_get_dir_sctructure($path);
  $file_structure_items = array();
  foreach ($structure as $item) {
    switch ($item['type']) {
      case 'dir':
        $file_structure_items[] = l(
          $item['node']->getFilename(),
          'atp-sas/ajax/browser/json',
          array(
            'query' => array('path' => $item['node']->getPath() . '/' . $item['node']->getFilename()),
            'attributes' => array(
              'class' => array(
                'sas-browser-item-dir',
              ),
            ),
          )
        );
        break;
      case 'file':
        $diag_id = str_replace('.xml', '', $item['node']->getFilename());
        $diag = sasDiagFactory::create($diag_id, $item['node']->getPath());
        if (is_object($diag)) {
          $file_structure_items[] = l(
            $diag_id,
            '',
            array(
              'attributes' => array(
                'data-path' => $item['node']->getPath(),
                'data-id' => $diag_id,
                'data-type' => $diag->getType(),
                'class' => array(
                  'sas-browser-item-file',
                ),
              ),
            )
          );
        }
        break;
    }
  }
  $file_browser_button_items = array();
  $file_browser_button_items[] = l(
    t('Back'),
    'atp-sas/ajax/browser/json',
    array(
      'query' => array(
        'path' => preg_replace(
          '#(.*)/[^/]+[/]?$#s',
          '$1',
          $item['node']->getPath()
        )
      ),
      'attributes' => array(
        'class' => array(
          'sas-browser-item-dir',
        ),
      ),
    )
  );
  $output = array(
    'file_browser_wrapper' => array(
      '#type' => 'container',
      '#attributes' => array(
        'id' => 'sas-file-browser',
      ),
      'file_structure_wrapper' => array(
        '#type' => 'container',
        '#attributes' => array(
          'id' => 'sas-file-structure',
        ),
        'file_structure' => array(
          '#items' => $file_structure_items,
          '#theme' => 'item_list',
        ),
      ),
    ),
    'file_browser_buttons_wrapper' => array(
      '#type' => 'container',
      '#attributes' => array(
        'id' => 'sas-file-browser-buttons',
      ),
      'file_browser_buttons_wrapper' => array(
        '#items' => $file_browser_button_items,
        '#theme' => 'item_list',
        '#access' => $path != $root_path,
      ),
    ),
  );
  if ($json) {
    $output = render($output);
    drupal_json_output($output);
    die;
  }
  else {
    return $output;
  }

}

/**
 * Process callback for hook_filter
 */
function _atp_sas_diag_embed_process($text, $filter, $format, $langcode, $cache, $cache_id) {
  drupal_add_js('https://www.google.com/jsapi', 'external');
  return preg_replace_callback(
    '/\[\[sasDiag\|id:([^|]+)\|path:([^|]+)\|type:([^\]]+)\]\]/',
    function($m){
      $diag = sasDiagFactory::create($m[1], $m[2]);
      if (is_object($diag)) {
        $output = $diag->render();
        return render($output);
      }
      return;
    },
  $text);
}

/**
 * Tips callback for hook_filter
 */
function _atp_sas_diag_embed_tips($filter, $format, $long) {
  return t('[[sasDiag|id:(xml file name without extension)|path:(path to xml file)|type:(type of diagram)]] - Insert a diagram.');
}

function atp_sas_chart_test() {
  // Atodo: sas root path variable.
  drupal_add_js('https://www.google.com/jsapi', 'external');
  drupal_add_js(drupal_get_path('module', 'atp_sas') . '/js/sas_diag.js');
  drupal_add_js(drupal_get_path('theme', 'atp_theme') .'/js/jquery.throttledresize.js');
  drupal_add_js(drupal_get_path('theme', 'atp_theme') .'/js/jquery.debouncedresize.js');
  $diags = array();
  $diags[] = sasDiagFactory::create('DQ1_FIG3a_Risikoklasser_Circle');
  $diags[] = sasDiagFactory::create('DQ1_FIG5_HistoriskeResultater_Bar');
  $diags[] = sasDiagFactory::create('DQ1_FIG13_Indkomst_Line');
  $diags[] = sasDiagFactory::create('DQ1_FIG17_OmsÃ¦tning_Line_ReelDATA');
  $diags[] = sasDiagFactory::create('EQ1_FIG11_InvestmentPortfolio_Table');

  $output = array();
  foreach ($diags as $diag) {
    $output[] = $diag->render();
  }

  return $output;
}

/**
 * Implements hook_js_alter().
 */
function atp_sas_js_alter(&$js) {
  foreach ($js as $k => &$v) {
    if ($k == 'https://www.google.com/jsapi') {
      $v['weight'] = -1000;
    }
  }
}