<?php
/**
 * @file
 * Code for the ATP layouts feature.
 */

include_once 'atp_layouts.features.inc';

function atp_layouts_view_modes() {
  return array(
  	'1_4_fact' => '1/4-fact',
  	'1_4_l' => '1/4-L',
  	'1_4_compressed' =>  '1/4-compressed',
  	//'3_8_h' => '3-8-H',
  	'1_2_l' => '1/2-L',
    '1_2_square' => '1/2-square-image',
  	'1_2_h' => '1/2-H',
  	//'3_4_h' => '3-4-H',
  	'1_1_l' => '1/1-L',
    'teaser_with_img' => 'Teaser with image',
  );
}

function atp_layouts_image_view_modes() {
  return array(
    '2_wide' => 'Full',
    '1_wide' => 'Full - wide',
    '2_wide_text' => 'Full - text',
    '1_wide_text' => 'Full - wide - text',
    'original' => 'Original',
    'inline' => t('Inline'),
    'overlay' => t('Overlay'),
  );
}

/**
* Implements hook_entity_info_alter().
*/
function atp_layouts_entity_info_alter(&$entity_info) {
  $view_modes = atp_layouts_view_modes();
  foreach($view_modes as $key => $label) {
	  $entity_info['node']['view modes'][$key] = array(
	    'label' => t($label),
	    'custom settings' => FALSE,
	  );
  }

  $view_modes = atp_layouts_image_view_modes();
  foreach($view_modes as $key => $label) {
    $entity_info['file']['view modes'][$key] = array(
      'label' => t($label),
      'custom settings' => FALSE,
    );
  }

}

/**
 * implements hook_preprocess_panels_pane
 */
function atp_layouts_preprocess_panels_pane(&$vars, $hook) {

  $site_template_panes = array(
    'main' => 1,
    'footer' => 1,
    'header' => 1,
    'header-bottom' => 1,
    'bottom' => 1,
    'mobile-menu' => 1,
  );

  $panel = $vars['pane']->panel;

  // Don't add anything to site template panes
  if (!empty($site_template_panes[$panel])) {
    return;
  }

  $configuration = $vars['pane']->configuration;

  // Add view mode class for referenced entity.
  if (!empty($configuration['formatter_settings']['view_mode'])) {
    $view_mode = $configuration['formatter_settings']['view_mode'];
    $vars['classes_array'][] = 'view-mode-' . str_replace('_', '-', $view_mode);
  }

  // Add view mode class for rendered entity.
  if (!empty($configuration['view_mode'])) {
    $view_mode = $configuration['view_mode'];
    $vars['classes_array'][] = 'view-mode-' . str_replace('_', '-', $view_mode);
  }

  // Add classes to panes.
  $count = count($vars['display']->panels[$panel]);
  if ($vars['pane']->position % 2) {
    $vars['classes_array'][] = 'odd';
  }
  else {
    $vars['classes_array'][] = 'even';
  }

  if ($vars['pane']->position == 0) {
    $vars['classes_array'][] = 'first';
  }

  if ($vars['pane']->position == $count - 1) {
    $vars['classes_array'][] = 'last';
  }

  if ($vars['pane']->position > 0) {
     $vars['classes_array'][] = 'not-first';
  }
}

/**
* Implements hook_preprocess_node().
* node--section--1-4-l.tpl.php.
*/
function atp_layouts_preprocess_node(&$vars) {
  $view_modes = atp_layouts_view_modes();
  if (!empty($view_modes[$vars['view_mode']])) {
    $vars['theme_hook_suggestions'][] = 'node__' . $vars['type'] . '__' . $vars['view_mode'];
  }
}
