/* MEDIA QUERIES */
@mixin device($media) {
  @if $media == phone {
    @media screen and (max-width: 500px) { @content;}
  }
  @if $media == phone {
    @media screen and (min-width: 500px) and (max-width: 960px) and (orientation: landscape) { @content;}
  }
  @else if $media == tablet-portrait {
    @media screen and (max-width: 960px) { @content; }
  }
  @else if $media == tablet {
    @media screen and (max-width: 945px) { @content; }
  }
  @else if $media == screen {
    @media screen and (min-width: 1030px) { @content; }
  }
}

@mixin arrow($direction, $color, $size){
  display: block;
  border: 0;
  width: 0;
  height: 0;
  @if $direction == 'top' {
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  } @else if $direction == 'right' {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  } @else if $direction == 'bottom' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
    border-left: $size solid transparent;
  } @else if $direction == 'left' {
    border-top: $size solid transparent;
    border-right: $size solid $color;
    border-bottom: $size solid transparent;
  } @else if $direction == 'top-left' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
  } @else if $direction == 'top-right' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
  } @else if $direction == 'bottom-left' {
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $direction == 'bottom-right' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
}

@mixin user-select($option) {
  -webkit-user-select: $option;
  -khtml-user-select: $option;
  -moz-user-select: $option;
  -o-user-select: $option;
}

/* GRADIENTS */
@mixin background-image-with-ms($image) {
  @include background-image($image);
  background-image: -ms-#{$image};
}

/* MARGINS n PADDINGS */
@mixin padding($pt:0, $pr:0, $pb:0, $pl:0) {
  @if $pt > 0 { padding-top: $margins * $pt; }
  @if $pr > 0 { padding-right: $margins * $pr; }
  @if $pb > 0 { padding-bottom: $margins * $pb; }
  @if $pl > 0 { padding-left: $margins * $pl; }
  $tmp: $margins/2;
  @include device(tablet-portrait) {
    @if $pt > 0 { padding-top: $tmp * $pt; }
    @if $pr > 0 { padding-right: $tmp * $pr; }
    @if $pb > 0 { padding-bottom: $tmp * $pb; }
    @if $pl > 0 { padding-left: $tmp * $pl; }
  }
}
@mixin margin($pt:0, $pr:0, $pb:0, $pl:0) {
  @if $pt > 0 { margin-top: $margins * $pt; }
  @if $pr > 0 { margin-right: $margins * $pr; }
  @if $pb > 0 { margin-bottom: $margins * $pb; }
  @if $pl > 0 { margin-left: $margins * $pl; }
  $tmp: $margins/2;
  @include device(tablet-portrait) {
    @if $pt > 0 { margin-top: $tmp * $pt; }
    @if $pr > 0 { margin-right: $tmp * $pr; }
    @if $pb > 0 { margin-bottom: $tmp * $pb; }
    @if $pl > 0 { margin-left: $tmp * $pl; }
  }
}

/* FONTS */
@mixin font-smoothing($smoothing){
  text-shadow: 1px 1px 1px rgba(0,0,0,0.004);
  -webkit-font-smoothing: $smoothing;
  -moz-osx-font-smoothing: grayscale;
}

/* VIEWMODES */
@mixin view-mode-overlay {
  background: $black-transparent;
  position : absolute;
  bottom : 0;
  left : 0;
  padding: $margins/2 $margins;
  width: 100%;
  @include device(phone){
    padding: $margins/2;
  }
  * {
    color: #fff;
  }
  p {
    margin:0;
  }
  > div {
    padding-top: $margins;
    text-decoration: underline;
  }
}

@mixin view-mode($gridspan) {
  @include float-span($gridspan);
  position: relative;
  overflow: hidden;
  margin-right: 0;
  margin-bottom: $margins;
  margin-left: $margins-pct;
  border-left: 4px solid $green;
  @include device(phone){
    width: 100%;
    float: none;
    margin: 0 0 ($margins/2) 0;
  }
  .section-row > &:first-child, &.first {
    margin-left: 0;
  }
  .not-first & {
    margin-left: percentage($gutters-in-px/$width);
  }
  a {
    &:hover {
      text-decoration: none;
    }
  }
  .group-section-image-overlay {
    @include view-mode-overlay;
  }
}

/* SVG with PNG fallback and retina fallback */
$image-path: '../images' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
  background-image: url(#{$image-path}/#{$name}.svg);
  @if($size){
    background-size: $size;
  }
  .no-svg &{
    background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});
    @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
      background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
    }
  }
}


